version: '3.8'

name: api-agrichen

services:
  api:
    image: api-agrichen
    build:
      context: .
      dockerfile: Dockerfile_Production
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3006:3000'
    networks:
      - agrichen-network

  db:
    image: mysql:latest
    command: mysqld --sql_mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_AUTO_VALUE_ON_ZERO"
    restart: always
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USERNAME}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 5
    ports:
      - '3306:3306'
    volumes:
      - agrichen_mysql_volume:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - agrichen-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    env_file:
      - .env.development
    environment:
      PMA_HOST: db
      MYSQL_USERNAME: "${MYSQL_USERNAME}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    ports:
      - '8080:80'
    networks:
      - agrichen-network
      
networks:
  agrichen-network:
    driver: bridge

volumes:
  agrichen_mysql_volume: